The Remote HALcomp Protocol

Purpose

watch component input pins
update comp output pins
support several observers/updaters
create/bind step shall be idempotent
  - first bind creates hal rcomp
  - bind of an existing hal rcomp only verifies pins (names, types,
  direction)
stateless, idempotent, multiple binds possible
proxy process does acquire/release


updates by proxy process: via XPUB/verbose socket
  periodically detect for changes
  on change transmit changed pins
  on new subscriber transmit full update

bind phase:

  observer: MT_HALCOMP_BIND {compspec}
  compspec = name ninst pinlist
  pinlist = pinspec *
  pinspec = name type dir
  name = "for.%d.mat" | "format"

  wait for reply, fail on timeout
  reply:
    MT_HALCOMP_BIND_REJECT compname all mismatched pins errormsg
    can happen on bind of existing comp only
  or
    MT_HALCOMP_BIND_CONFIRM compname all matched pins
    happens on creation or re-bind of




open questions:

how to handle multiple instances? nothing special except ninst and %d
in names
one update channel per instance?
what is with observer going away? solution: count subscribers; count=0
-> unbind()

bind message: has create flag - if false, bind only, no create = test
for existence

server process level: publish all compnames on XPUB socket? HAL
discovery proto?

HAL shutdown detect --> publish on status XPUB
