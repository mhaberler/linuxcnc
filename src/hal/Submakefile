INCLUDES += hal

../include/%.h: ./hal/%.h
	cp $^ $@

# observed on wheezy
HALLIBSRCS := \
	hal/hal_lib.c

# ULAPI: all thread-specific code now comes in through the ulapi library
# (liblinuxcnculapi.so) which autoloads the proper ulapi on demand

$(call TOOBJSDEPS, $(HALLIBSRCS)): EXTRAFLAGS += $(THREADS_RTFLAGS) -fPIC

# Add to list of sources to compile -DULAPI ->
# objects/{hal/hal_lib.o}
USERSRCS += $(HALLIBSRCS)

HALLIB := ../lib/liblinuxcnchal.so


# for now, link in ulapi  plus any referenced  objs directly
# cause: http://fedoraproject.org/wiki/UnderstandingDSOLinkChange

$(HALLIB).0: \
	$(call TOOBJS, $(HALLIBSRCS)) \
	$(call TOOBJS, $(ULAPI_AUTOLOAD_SRCS)) \
	$(call TOOBJS, $(SHMDRVAPISRCS)) \
	$(call TOOBJS,$(LIBINISRCS))		
	$(ECHO) Creating shared library $(notdir $@)
	@mkdir -p ../lib
	@rm -f $@
	$(Q)$(CC) $(LDFLAGS) -Wl,-rpath,$(EMC2_RTLIB_DIR) \
	    -Wl,-soname,$(notdir $@) -shared \
	    -o $@ $^ -lstdc++ -ldl -lrt $(RT_LDFLAGS)

HALMODULESRCS := hal/halmodule.cc
PYSRCS += $(HALMODULESRCS)

HALMODULE := ../lib/python/_hal.so
$(HALMODULE): $(call TOOBJS, $(HALMODULESRCS)) $(HALLIB)
	$(ECHO) Linking python module $(notdir $@)
	$(Q)$(CXX) $(LDFLAGS) -shared -o $@ $^ 



TARGETS += $(HALLIB) ../lib/liblinuxcnchal.so.0
PYTARGETS += $(HALMODULE) 
